name: test
on: [push, pull_request]
jobs:
  lints:
    name: Lints
    runs-on: ubuntu-18.04
    container: hyperledgerlabs/solang:ci
    steps:
      - name: Checkout sources
        uses: actions/checkout@v2
      - name: Rust stable
        run: rustup default stable
      - name: Run cargo fmt
        run: cargo fmt --all -- --check
      - name: Run cargo clippy
        run: cargo clippy -- -D warnings

  linux:
    name: Linux
    runs-on: ubuntu-18.04
    container: hyperledgerlabs/solang:ci
    steps:
    - name: Checkout sources
      uses: actions/checkout@v2
    - name: Rust stable
      run: rustup default stable
    - name: Compile stdlib
      run: make
      working-directory:  ./stdlib
    - name: Build
      run: cargo build --verbose
    - name: Run tests
      run: cargo test --verbose

  windows:
    name: Windows
    runs-on: windows-latest
    steps:
    - name: Checkout sources
      uses: actions/checkout@v2
    - name: Download LLVM
      run: curl -sS -o c:\llvm.zip https://solang.io/download/llvm10.0.zip
    - name: Extract LLVM
      run: unzip c:\llvm.zip -d c:/
    - name: Add LLVM to Path
      run: echo "c:\llvm10.0\bin" | Out-File -FilePath $env:GITHUB_PATH -Encoding utf8
    - name: Compile stdlib
      run: make
      working-directory: ./stdlib
    - name: Build
      run: cargo build --verbose
    - name: Run tests
      run: cargo test --verbose

  mac:
    name: Mac
    runs-on: macos-latest
    steps:
    - name: Checkout sources
      uses: actions/checkout@v2
    - name: Download LLVM
      run: curl -sS -o llvm10.0-mac.tar.gz https://solang.io/download/llvm10.0-mac.tar.gz
    - name: Extract LLVM
      run: tar zxf llvm10.0-mac.tar.gz
    - name: Add LLVM to Path
      run: echo "$(pwd)/llvm10.0/bin" >> $GITHUB_PATH
    - name: Compile stdlib
      run: make
      working-directory: ./stdlib
    - name: Build
      run: cargo build --verbose
    - name: Run tests
      run: cargo test --verbose

  docker:
    name: Docker
    runs-on: ubuntu-18.04
    steps:
    - name: Checkout sources
      uses: actions/checkout@v2
    - name: Build dockerfile
      run: docker build .

  solana:
    name: Solana Integration test
    runs-on: ubuntu-18.04
    container: hyperledgerlabs/solang:ci
    services:
      solana:
        image: solanalabs/solana:v1.4.2
        ports:
          - 8899
          - 8900
    steps:
    - name: Checkout sources
      uses: actions/checkout@v2
    - uses: actions/setup-node@v1
      with:
        node-version: '12'
    - name: Rust stable
      run: rustup default stable
    - name: Install npm packages
      run: npm install
      working-directory: ./integration/solana
    - name: Compile stdlib
      run: make
      working-directory:  ./stdlib
    - name: Build
      run: cargo build --verbose
    - name: Build Solang contract
      run: npm run build:bpf-solang
      working-directory: ./integration/solana
    - name: Set github env
      run: echo "RPC_URL=http://solana:8899/" >> $GITHUB_ENV
    - name: Deploy and test contract
      run: npm run start
      working-directory: ./integration/solana
