on:
  push:
    tags:
    - 'v*'

name: Build Release Binaries

jobs:
  linux:
    name: Linux
    runs-on: ubuntu-20.04
    container: hyperledgerlabs/solang:ci
    steps:
    - name: Checkout sources
      uses: actions/checkout@v2
    - name: Rust stable
      run: rustup default stable
    - name: Compile stdlib
      run: clang-10 --target=wasm32 -c -emit-llvm -O3 -ffreestanding -fno-builtin -Wall stdlib.c sha3.c substrate.c ripemd160.c
      working-directory: ./stdlib
    - name: Build
      run: cargo build --verbose --release
    - name: Run tests
      run: cargo test --verbose --release
    - name: Upload binary
      uses: svenstaro/upload-release-action@v2
      with:
        repo_token: ${{ secrets.GITHUB_TOKEN }}
        file: target/release/solang
        asset_name: solang_linux
        tag: ${{ github.ref }}

  windows:
    name: Windows
    runs-on: windows-latest
    steps:
    - name: Checkout sources
      uses: actions/checkout@v2
    - name: Download LLVM
      run: curl -sS -o c:\llvm.zip https://solang.io/download/llvm10.0.zip
    - name: Extract LLVM
      run: unzip c:\llvm.zip -d c:/
    - name: Add LLVM to Path
      run: echo "::add-path::c:\llvm10.0\bin"
    - name: Compile stdlib
      run: clang-10 --target=wasm32 -c -emit-llvm -O3 -ffreestanding -fno-builtin -Wall stdlib.c sha3.c substrate.c ripemd160.c
      working-directory: ./stdlib
    - name: Build
      run: cargo build --release --verbose
    - name: Run tests
      run: cargo test --release --verbose
    - name: Upload binary
      uses: svenstaro/upload-release-action@v2
      with:
        repo_token: ${{ secrets.GITHUB_TOKEN }}
        file: target/release/solang.exe
        asset_name: solang.exe
        tag: ${{ github.ref }}
